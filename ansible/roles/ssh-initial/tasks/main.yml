---

# Best of
# https://stackoverflow.com/questions/39698067/ansible-check-if-my-user-exists-on-remote-host-else-use-root-user-to-connect-w/39699075#39699075
# https://stackoverflow.com/questions/33359404/ansible-best-practice-for-maintaining-list-of-sudoers:
# https://serverfault.com/questions/840156/create-non-root-user-and-disable-root-ssh-in-ansible
# https://stackoverflow.com/questions/56436906/how-to-cleanly-edit-sshd-config-for-basic-security-options-in-an-ansible-playboo

tasks:
  - name: Test SSH connection and determine if the {{ ansible_user }} user is already configured.
    ping:
    ignore_unreachable: true
    ignore_errors: true
    changed_when: false
    register: ssh_test

  - block:
      - name: Fall back to root user
          connection: local
          set_fact:
            ansible_user: root

      - name: Create 'ansible' user
        become: true
        user:
          name: ansible
          comment: "Ansible user"
          # todo: add password?
          shell: /bin/bash

    when: ssh_test.unreachable is defined

  - name: Delayed gathering of facts
    setup:

  - name: Install 'sudo'
    become: true
    apt:
      name: sudo

  - name: Ensure that 'wheel' group is present
    become: true
    group:
      name: wheel
      state: present

  - name: Allow 'wheel' group to have passwordless sudo
    become: true
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%wheel'
      line: '%wheel ALL=(ALL) NOPASSWD: ALL'
      validate: visudo -cf %s

  - name: Add ansible user to 'wheel' group
    become: true
    user:
      name: "ansible"
      groups: wheel
      append: yes

  - name: Give trusted users ssh access to user ansible
    become: true
    authorized_key:
      user: ansible
      key: "{{ authorized_keys|map(attribute='ssk_key')|join('\n') }}"
      exclusive: yes

  - name: Edit sshd config file
    become: true
    lineinfile:
      path: "/etc/ssh/sshd_config"
      regex: "^(#)?{{item.key}}"
      line: "{{item.key}} {{item.value}}"
      backup: "/etc/ssh/sshd_config.bk"
      validate: '/usr/sbin/sshd -T -f %s'
      state: present
    loop:
      - { key: "PermitRootLogin", value: "no" }
      - { key: "PasswordAuthentication", value: "no" }
      - { key: "AllowUsers", value: "ansible" }
      - { key: "ClientAliveInterval", value: "300" }
      - { key: "ClientAliveCountMax", value: "1" }
      - { key: "MaxAuthTries", value: "2" }
      - { key: "AllowTcpForwarding", value: "no" } # todo we likely need yes here in the future
      - { key: "X11Forwarding", value: "no" }
      - { key: "AllowAgentForwarding", value: "no" }
      - { key: "AuthorizedKeysFile", value: ".ssh/authorized_keys" }
    notify:
      - reload sshd
